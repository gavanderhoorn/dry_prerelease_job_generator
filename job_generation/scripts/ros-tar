#!/usr/bin/env python

from __future__ import with_statement

import sys
import urllib
import yaml



def parse(arg):
    if arg[0:4] != 'ros-':
        return None
    distro = arg[4:].split('-')[0]
    if not distro in ['cturtle', 'diamondback', 'unstable']:
        return None
    stack = '_'.join(arg[4:].split('-')[1:])
    return (stack, distro)
    


def get_version(stack, distro):
    rosdistro = yaml.load(urllib.urlopen('https://code.ros.org/svn/release/trunk/distros/%s.rosdistro'%distro).read())
    return rosdistro['stacks'][stack]['version']
    


def get_depends_one(stack, distro):
    name = '%s-%s'%(stack, get_version(stack, distro))
    url = urllib.urlopen('https://code.ros.org/svn/release/download/stacks/%s/%s/%s.yaml'%(stack, name, name))
    conf = url.read()
    if '404 Not Found' in conf:
        return []
    depends = yaml.load(conf)['depends']
    if depends:
        return depends
    else:
        return []


def get_depends_all(stack, distro, depends_all):
    depends_one = get_depends_one(stack, distro)
    for d in depends_one:
        if not d in depends_all:
            depends_all.append(d)
            get_depends_all(d, distro, depends_all)


def main():
    sys.argv = sys.argv[1:]
    if len(sys.argv) == 0:
        print 'Usage: ros-tar ros-<distro>-<stack/variant>'
        return -1

    depends = []
    for a in sys.argv:
        res = parse(a)
        if not res:
            print 'Could not parse %s'%a
            return -1
        get_depends_all(res[0], res[1], depends)
    print depends



if __name__ == '__main__':
    sys.exit(main())
